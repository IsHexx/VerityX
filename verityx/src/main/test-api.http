POST http://localhost:8089/api/testplans
Content-Type: application/json

{
  "planName": "Test Plan 3",
  "description": "This is a description for Test Plan 1.",
  "projectId": 101,
  "status": "pending",
  "participants": "1,2,3",
  "startDate": "2024-11-20",
  "endDate": "2024-11-30",
  "planVersion": "v1.0"
}

###
###
GET http://localhost:8089/api/testplans
Accept: application/json

###
# @no-cookie-jar
GET http://localhost:8089/api/user/test
Accept: application/json

###
POST http://localhost:8089/api/user/login
Content-Type: application/json

{
  "username": "admin",
  "password": "123456"
}

### ApiTestReport接口测试

### 创建API测试报告
POST http://localhost:8089/api/apitestreports
Content-Type: application/json

{
  "apiName": "测试API",
  "url": "http://localhost:8089/",
  "method": "POST",
  "status": "成功",
  "responseTime": 120,
  "executionTime": "2023-05-15T10:30:00.000+08:00",
  "executor": "测试人员1",
  "headers": "{\"Content-Type\": \"application/json\"}",
  "params": "{\"username\": \"admin\", \"password\": \"123456\"}",
  "response": "{\"code\": 200, \"message\": \"登录成功\", \"data\": {\"token\": \"xxx\"}}"
}

### 获取API测试报告列表（分页）
GET http://localhost:8089/api/apitestreports/list?page=1&pageSize=10&keyword=登录&status=成功
Accept: application/json

### 获取API测试报告详情
GET http://localhost:8089/api/apitestreports/1
Accept: application/json

### 更新API测试报告
PUT http://localhost:8089/api/apitestreports/1
Content-Type: application/json

{
  "apiName": "用户登录API-更新",
  "url": "http://localhost:8089/api/user/login",
  "method": "POST",
  "status": "失败",
  "responseTime": 150,
  "executionTime": "2023-05-15T10:35:00.000+08:00",
  "executor": "测试人员2",
  "headers": "{\"Content-Type\": \"application/json\"}",
  "params": "{\"username\": \"admin\", \"password\": \"wrong_password\"}",
  "response": "{\"code\": 401, \"message\": \"密码错误\"}"
}

### 删除API测试报告
DELETE http://localhost:8089/api/apitestreports/1
Accept: application/json

### 批量删除API测试报告
POST http://localhost:8089/api/apitestreports/batch-delete
Content-Type: application/json

{
  "ids": [2, 3, 4]
}

### 导出API测试报告
GET http://localhost:8089/api/apitestreports/1/export
Accept: application/json

### API环境管理接口测试

### 1. 创建API环境配置
POST http://localhost:8089/api/environments
Content-Type: application/json

{
  "envName": "预发布环境",
  "baseUrl": "http://staging-api.example.com",
  "description": "用于预发布阶段的API测试环境",
  "isDefault": false,
  "globalHeaders": "{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer staging-token\"}",
  "globalParams": "{\"version\":\"v1\",\"debug\":\"true\"}"
}

### 2. 获取API环境配置列表（分页）
GET http://localhost:8089/api/environments/list?page=1&pageSize=10&keyword=开发
Accept: application/json

### 3. 获取所有环境配置（用于下拉选择）
GET http://localhost:8089/api/environments
Accept: application/json

### 4. 获取默认环境配置
GET http://localhost:8089/api/environments/default
Accept: application/json

### 5. 获取单个环境配置详情
GET http://localhost:8089/api/environments/1
Accept: application/json

### 6. 更新环境配置
PUT http://localhost:8089/api/environments/1
Content-Type: application/json

{
  "envName": "开发环境-更新",
  "baseUrl": "http://dev-api.example.com",
  "description": "更新后的开发环境描述",
  "isDefault": false,
  "globalHeaders": "{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer updated-dev-token\",\"X-API-Version\":\"2.0\"}",
  "globalParams": "{\"version\":\"v2\",\"debug\":\"true\"}"
}

### 7. 设置为默认环境
PUT http://localhost:8089/api/environments/1/default
Accept: application/json

### 8. 删除环境配置
DELETE http://localhost:8089/api/environments/2
Accept: application/json

### 9. 批量删除环境配置
POST http://localhost:8089/api/environments/batch-delete
Content-Type: application/json

{
  "ids": [3, 4, 5]
}

### UI测试用例管理接口测试 

### 1. 创建UI测试用例
POST http://localhost:8089/api/uitestcases
Content-Type: application/json

{
  "caseTitle": "用户登录功能测试",
  "projectId": "1",
  "importanceLevel": "P1",
  "environment": "Chrome",
  "precondition": "系统已部署且可访问",
  "description": "验证用户使用有效凭据可以成功登录系统",
  "steps": [
    {
      "actionType": "navigate",
      "targetUrl": "http://localhost:8080/login",
      "description": "打开登录页面"
    },
    {
      "actionType": "input",
      "locatorType": "id",
      "locatorValue": "username",
      "inputValue": "admin",
      "description": "输入用户名"
    },
    {
      "actionType": "input",
      "locatorType": "id",
      "locatorValue": "password",
      "inputValue": "123456",
      "description": "输入密码"
    },
    {
      "actionType": "click",
      "locatorType": "css",
      "locatorValue": "button[type='submit']",
      "description": "点击登录按钮"
    },
    {
      "actionType": "assertText",
      "locatorType": "css",
      "locatorValue": ".welcome-message",
      "inputValue": "欢迎回来",
      "description": "验证登录成功后的欢迎信息"
    }
  ],
  "timeout": 30,
  "retryCount": 1,
  "screenshotPolicy": "failureOnly",
  "parameters": [
    {
      "name": "username",
      "value": "admin"
    },
    {
      "name": "password",
      "value": "123456"
    }
  ]
}

###
### 2. 获取UI测试用例列表（全部）
GET http://localhost:8089/api/uitestcases/list?page=1&pageSize=10
Accept: application/json

###
### 3. 获取UI测试用例列表（带关键字过滤）
GET http://localhost:8089/api/uitestcases/list?page=1&pageSize=10&keyword=登录
Accept: application/json

###
### 4. 获取UI测试用例列表（已执行）
GET http://localhost:8089/api/uitestcases/list?page=1&pageSize=10&status=executed
Accept: application/json

###
### 5. 获取UI测试用例列表（未执行）
GET http://localhost:8089/api/uitestcases/list?page=1&pageSize=10&status=unexecuted
Accept: application/json

###
### 6. 获取UI测试用例详情
GET http://localhost:8089/api/uitestcases/UI-001
Accept: application/json

###
### 7. 更新UI测试用例
PUT http://localhost:8089/api/uitestcases/UI-001
Content-Type: application/json

{
  "caseTitle": "用户登录功能测试-更新版",
  "projectId": "1",
  "importanceLevel": "P0",
  "environment": "Chrome",
  "precondition": "系统已部署且可访问",
  "description": "验证用户使用有效凭据可以成功登录系统并跳转到首页",
  "steps": [
    {
      "actionType": "navigate",
      "targetUrl": "http://localhost:8080/login",
      "description": "打开登录页面"
    },
    {
      "actionType": "input",
      "locatorType": "id",
      "locatorValue": "username",
      "inputValue": "admin",
      "description": "输入用户名"
    },
    {
      "actionType": "input",
      "locatorType": "id",
      "locatorValue": "password",
      "inputValue": "123456",
      "description": "输入密码"
    },
    {
      "actionType": "click",
      "locatorType": "css",
      "locatorValue": "button[type='submit']",
      "description": "点击登录按钮"
    },
    {
      "actionType": "wait",
      "waitTime": 1000,
      "description": "等待页面跳转"
    },
    {
      "actionType": "assertText",
      "locatorType": "css",
      "locatorValue": ".welcome-message",
      "inputValue": "欢迎回来，管理员",
      "description": "验证登录成功后的欢迎信息"
    },
    {
      "actionType": "assertExists",
      "locatorType": "css",
      "locatorValue": ".dashboard-container",
      "description": "验证已跳转到首页"
    }
  ],
  "timeout": 30,
  "retryCount": 2,
  "screenshotPolicy": "everyStep",
  "parameters": [
    {
      "name": "username",
      "value": "admin"
    },
    {
      "name": "password",
      "value": "123456"
    }
  ]
}

###
### 8. 删除UI测试用例
DELETE http://localhost:8089/api/uitestcases/UI-001
Accept: application/json

###
### 9. 执行UI测试用例
POST http://localhost:8089/api/uitestcases/UI-001/execute
Accept: application/json

###
### 10. 创建另一个UI测试用例（商品搜索）
POST http://localhost:8089/api/uitestcases
Content-Type: application/json

{
  "caseTitle": "商品搜索功能测试",
  "projectId": "1",
  "importanceLevel": "P2",
  "environment": "Firefox",
  "precondition": "系统已部署且用户已登录",
  "description": "验证用户可以通过搜索功能找到指定商品",
  "steps": [
    {
      "actionType": "navigate",
      "targetUrl": "http://localhost:8080/products",
      "description": "打开商品页面"
    },
    {
      "actionType": "input",
      "locatorType": "id",
      "locatorValue": "search-input",
      "inputValue": "手机",
      "description": "在搜索框中输入'手机'"
    },
    {
      "actionType": "click",
      "locatorType": "id",
      "locatorValue": "search-button",
      "description": "点击搜索按钮"
    },
    {
      "actionType": "wait",
      "waitTime": 1500,
      "description": "等待搜索结果加载"
    },
    {
      "actionType": "assertExists",
      "locatorType": "css",
      "locatorValue": ".product-list .product-item",
      "description": "验证搜索结果中存在商品"
    },
    {
      "actionType": "getText",
      "locatorType": "css",
      "locatorValue": ".search-result-count",
      "description": "获取搜索结果数量"
    }
  ],
  "timeout": 25,
  "retryCount": 1,
  "screenshotPolicy": "failureOnly",
  "parameters": [
    {
      "name": "searchKeyword",
      "value": "手机"
    }
  ]
}
